{
  "swagger": "2.0",
  "info": {
    "title": "Discourse API Documentation",
    "x-logo": {
      "url": "https://discourse-meta.s3-us-west-1.amazonaws.com/optimized/3X/9/d/9d543e92b15b06924249654667a81441a55867eb_1_690x184.png"
    },
    "description": "This page contains the documentation on how to use Discourse through API calls.\n\n> Note: This documentation is not complete, so for missing parts you may have to\n[reverse engineer the Discourse API](https://meta.discourse.org/t/how-to-reverse-engineer-the-discourse-api/20576) to figure out how to use an API endpoint.\n\n### Request Content-Type\n\nThe Content-Type for POST and PUT requests must be set to `application/x-www-form-urlencoded`\nor `multipart/form-data` otherwise you may receive a bad request response.\n\n### Endpoint Names and Response Content-Type\n\nMost API endpoints provide the same content as their HTML counterparts. For example\nthe URL `/categories` serves a list of categories, the `/categories.json` API provides the\nsame information in JSON format.\n\nInstead of sending API requests to `/categories.json` you may also send them to `/categories`\nand add an `Accept: application/json` header to the request to get the JSON response.\nSending requests with the `Accept` header is necessary if you want to use URLs\nfor related endpoints returned by the API, such as pagination URLs.\nThese URLs are returned without the `.json` prefix so you need to add the header in\norder to get the correct response format.\n\n### Authentication\n\nSome endpoints do not require any authentication, pretty much anything else will\nrequire you to be authenticated.\n\nTo become authenticated you will need to create an API Key from the admin panel.\n\nOnce you have your API Key you can pass it in along with your API Username\nas an HTTP header like this:\n\n```\ncurl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\\n-H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\\n-H \"Api-Username: discourse1\"\n```\n\nand this is how POST requests will look:\n\n```\ncurl -X POST \"http://127.0.0.1:3000/categories\" \\\n-H \"Content-Type: multipart/form-data;\" \\\n-H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\\n-H \"Api-Username: discourse1\" \\\n-F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\\n-F \"color=49d9e9\" \\\n-F \"text_color=f0fcfd\"\n```\n",
    "version": "latest"
  },
  "host": "discourse.example.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/categories.json": {
      "get": {
        "summary": "Get a list of categories",
        "description": "The Categories endpoint returns a list of all the categories for\nyour discourse site that you have access to.\n",
        "parameters": [],
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "A category_list object that contains an array of categories\n",
            "schema": {
              "type": "object",
              "properties": {
                "category_list": {
                  "type": "object",
                  "properties": {
                    "can_create_category": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new category",
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "color",
                "text_color"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "text_color": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "category response",
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id for the category"
                    },
                    "custom_fields": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
